/*
 * UrbanFootprint v1.5
 * Copyright (C) 2016 Calthorpe Analytics
 *
 * This file is part of UrbanFootprint version 1.5
 *
 * UrbanFootprint is distributed under the terms of the GNU General
 * Public License version 3, as published by the Free Software Foundation. This
 * code is distributed WITHOUT ANY WARRANTY, without implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
 * Public License v3 for more details; see <http://www.gnu.org/licenses/>.
 */

var scenario;
module("clone test", {
    setup: function() {
        setupForTesting();
        scenario = Footprint.store.find(Footprint.Scenario).objectAt(0);
    }
});

test("Test nested fixtures", function() {
    try {

        clonedScenario = scenario.cloneRecord(Footprint.store);
        ok(clonedScenario.storeKey != null);
        ok(scenario.storeKey != clonedScenario.storeKey);

        equals(scenario.get('parent_config_entity'), clonedScenario.get('parent_config_entity'));

        logProperty(clonedScenario.get('db_entities').objectAt(0));
        ok(clonedScenario.get('db_entities'));
        equals(clonedScenario.get('db_entities').length(),
               scenario.get('db_entities').length(),
                'Expect equal number of db_entities');
        equals(clonedScenario.get('db_entities').toArray()[0].get('config_entity'), clonedScenario);

        ok(clonedScenario.get('built_form_sets').length() > 0, 'Expect more than 0 built_form_sets');
        equals(clonedScenario.get('built_form_sets').length(),
            scenario.get('built_form_sets').length(),
            "Expect equal number of built_form_sets");

        equals(clonedScenario.get('presentations').toArray()[0].get('config_entity'), clonedScenario);
        // Account for garbage presentation that gets generated by fixtures
        equals(clonedScenario.get('presentations').length(),
            scenario.get('presentations').length()-1,
            "Expect equal number of presentations");

        equals($.map(clonedScenario.getPath('selections.db_entities'),function(key) { return key;}).length,
            $.map(scenario.getPath('selections.db_entities'), function(key) { return key;}).length,
            'Expect equal number of db_entity selections');

    }
    catch(e) {
        Footprint.logError(e);
        throw e;
    }
});
